const express=require("express"),app=express(),axios=require("axios"),cors=require("cors"),bodyParser=require("body-parser"),moment=require("moment");app.use(cors({origin:"http://localhost:3000"})),app.use(bodyParser.json());const API_KEY="oNhW2TBOlI1t4kWb3PEad1K1S1KxKuuI3GX6rGvT",getOffDay=async()=>await axios.get("https://yhua9e1l30.execute-api.us-east-1.amazonaws.com/sandbox/off-days",{headers:{"x-api-key":API_KEY}}),shippingMethod=async id=>await axios.get(`https://yhua9e1l30.execute-api.us-east-1.amazonaws.com/sandbox/shipping-methods/${id}`,{headers:{"x-api-key":API_KEY}});app.get("/shipping-methods",async(req,res)=>{const data=await axios.get("https://yhua9e1l30.execute-api.us-east-1.amazonaws.com/sandbox/shipping-methods",{headers:{"x-api-key":API_KEY}});return res.status(200).json(data.data)}),app.post("/shipping-methods",async(req,res)=>{let reqform=req.body,date=moment(),currentDay=date.format("YYYY-MM-DD"),orderNumber=100+date.valueOf()+(Math.floor(100*Math.random())+1),queryGetOffDay,resQueryGetOffDay=(await getOffDay()).data,listDayBusinness=[];for(let index=0;listDayBusinness.length<10;index++){let d=date.add(1,"days");d=d.format("YYYY-MM-DD");let existe=!1;resQueryGetOffDay.forEach(element=>{d===element&&(existe=!0)}),existe||listDayBusinness.push(d)}let queryShippingMethod=await shippingMethod(reqform.method),rules=queryShippingMethod.data.rules.availability.byWeight,product=reqform.lineItems,rulesByResquesTime={};switch(product.forEach(e=>{if(!(e.productWeight>=rules.min&&e.productWeight<=rules.max)){let returnResult={pack_promise_min:null,pack_promise_max:null,ship_promise_min:null,ship_promise_min:null,delivery_promise_min:null,delivery_promise_max:null,ready_pickup_promise_min:null,ready_pickup_promise_max:null};return res.status(200).json(returnResult)}rulesByResquesTime=queryShippingMethod.data.rules.availability.byRequestTime}),rulesByResquesTime.dayType){case"BUSINESS":let fechaExiste=!1;if(resQueryGetOffDay.forEach(element=>{currentDay===element&&(fechaExiste=!0)}),fechaExiste){let returnResult={pack_promise_min:null,pack_promise_max:null,ship_promise_min:null,ship_promise_min:null,delivery_promise_min:null,delivery_promise_max:null,ready_pickup_promise_min:null,ready_pickup_promise_max:null};return res.status(200).json(returnResult)}}let hour=moment().format("H"),rulesPromise;if(!(rulesByResquesTime.fromTimeOfDay<=hour&&hour<=rulesByResquesTime.toTimeOfDay)){let returnResult={pack_promise_min:null,pack_promise_max:null,ship_promise_min:null,ship_promise_min:null,delivery_promise_min:null,delivery_promise_max:null,ready_pickup_promise_min:null,ready_pickup_promise_max:null};return res.status(200).json(returnResult)}}),app.listen(5e3,()=>{console.log("Server on port 5000")});